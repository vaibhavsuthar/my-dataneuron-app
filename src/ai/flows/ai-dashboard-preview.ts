// This file is generated by Firebase Genkit.
'use server';

/**
 * @fileOverview A flow that generates an animated preview of a conceptual AI dashboard.
 *
 * @fileOverview This file defines a Genkit flow for generating an animated preview of an AI dashboard.
 *  - generateAIDashboardPreview - A function that generates the AI dashboard preview.
 *  - AIDashboardPreviewInput - The input type for the generateAIDashboardPreview function.
 *  - AIDashboardPreviewOutput - The return type for the generateAIDashboardPreview function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';
import wav from 'wav';

const AIDashboardPreviewInputSchema = z.object({
  prompt: z
    .string()
    .describe('A prompt describing the desired AI dashboard preview.'),
});
export type AIDashboardPreviewInput = z.infer<typeof AIDashboardPreviewInputSchema>;

const AIDashboardPreviewOutputSchema = z.object({
  media: z
    .string()
    .describe(
      'A data URI containing the animated preview of the AI dashboard.'
    ),
});
export type AIDashboardPreviewOutput = z.infer<typeof AIDashboardPreviewOutputSchema>;

export async function generateAIDashboardPreview(
  input: AIDashboardPreviewInput
): Promise<AIDashboardPreviewOutput> {
  return aiDashboardPreviewFlow(input);
}

const aiDashboardPreviewFlow = ai.defineFlow(
  {
    name: 'aiDashboardPreviewFlow',
    inputSchema: AIDashboardPreviewInputSchema,
    outputSchema: AIDashboardPreviewOutputSchema,
  },
  async input => {
    const {media} = await ai.generate({
      // IMPORTANT: ONLY the googleai/gemini-2.0-flash-preview-image-generation model is able to generate images. You MUST use exactly this model to generate images.
      model: 'googleai/gemini-2.0-flash-preview-image-generation',
      prompt: input.prompt,
      config: {
        responseModalities: ['TEXT', 'IMAGE'], // MUST provide both TEXT and IMAGE, IMAGE only won't work
      },
    });

    if (!media) {
      throw new Error('no media returned');
    }

    return {media: media.url};
  }
);
